

QUESTION 1


#(A) Product of matrices

X = [[1,2,3],
     [4 ,5,6],
     [7 ,8,9]]

Y = [[9,8,7],
     [6,5,4],
     [3,2,1]]

def product_mat(mat1,mat2):

    res= [[0,0,0],
          [0,0,0],
          [0,0,0]]

    for i in range(len(mat1)):
       for j in range(len(mat2[0])):
         for k in range(len(mat2)):
            res[i][j] += mat1[i][k] * mat2[k][j]
    return res

res_1=product_mat(X,Y)
print("The product is")
for r1 in res_1:
 print(r1)

#(B) Transpose of matrices

def transpose_mat(mat3):
    res_transpose = [[0,0,0],
                    [0,0,0],
                    [0,0,0]]
    for i in range(len(mat3)):
       for j in range(len(mat3[0])):
           res_transpose[j][i] = mat3[i][j]

    return res_transpose


res_2=transpose_mat(X)
print("The transpose of X is")
for r2 in res_2:
    print(r2)
res_3=transpose_mat(Y)
print("The transpose of Y is")
for r3 in res_3:
    print(r3)

#(C) Prove (AB)^T=B^T*A^T

res_4=transpose_mat(res_1)
print("The transpose of product is")
for r4 in res_4:
    print(r4)


res_5=product_mat(res_3,res_2)
print("The product of Y^T*X^T is")
for r5 in res_5:
    print(r5)

res_6=product_mat(res_3,res_2)
print("The product of Y^T*X^T is")
for r6 in res_6:
    print(r6)

if res_5==res_6:
    print("LHS=RHS")
else:
    print("LHS not equal to RHS")


QUESTION 2


org_tup = (1, 3, 5, 2, 3, 5, 1, 1, 3)
  
print("The original tuple is : " + str(org_tup))


res = tuple(set(org_tup))

print("The tuple after removing duplicates : " + str(res))

res_1 = sum(list(res))
  
print("The summation of tuple elements are : " + str(res_1)) 



QUESTION 3


def palindrome(name):
    if len(name)<=1:
        return True
    elif name[0]==name[-1]:
            return palindrome(name[1:-1])
    else:
        return False
def listtostring(s):
    for a in s:
        print("", a+':',hex(ord(a)))
b=str(input('enter string:'))
c=list(b)

n=len(c)
if palindrome(c):
    print('it is palindrome')
    listtostring(c)
else:
    print('not palindrome')
    c.reverse()
    x=c[1:n] + c[n-1:0:-1]
    y=len('  '.join(x))
    for i in range(1,n):
        print(' '.join(c[n-1:n-i:-1]+c[n-i:n]).center(y,' '))
    for i in range(n,0,-1):
        print(' '.join(c[n-1:n-i:-1]+c[n-i:n]).center(y,' '))


QUESTION 4


import csv


def sort():
    with open('names.csv', 'r') as file:
        data = csv.reader(file, delimiter=',')
        ls = [x for x in data]
        n = len(ls)
        for x in range(n):
            for j in range(0, n - x - 1):
                if ls[j][0] > ls[j + 1][0]:
                    ls[j], ls[j + 1] = ls[j + 1], ls[j]
        print(ls)


def remove_odd():
    with open('names.csv', 'r') as file:
        data = csv.reader(file, delimiter=',')
        ls = [x for x in data]
        length = len(ls)
        modified = []
        for x in range(length):
            if int(ls[x][0]) % 2 == 0:
                modified.append(ls[x])
        with open('names_new.csv', 'w') as write:
            writer = csv.writer(write, delimiter=',')
            for x in modified:
                writer.writerow(x)


def ascii_diff():
    with open('names.csv', 'r') as file:
        data = csv.reader(file, delimiter=',')
        string = ""
        for x in data:
            string += x[1]
        print(string)
        _min = ord(string[0])
        # print(_min)
        for x in string:
            for y in string[::-1]:
                if x == y:
                    print("same value", x, y)
                else:
                    num = abs(ord(x) - ord(y))
                    # print(num)
                    if num < _min:
                        _min = num
        print(_min)


sort()
remove_odd()
ascii_diff()

